{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SA4BA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAnCSQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEzB,SAAkCC,GAChCA,EAAEC,iBAQF,IANA,IAAMC,EAAY,CAChBC,WAAYC,OAAOJ,EAAEK,OAAOC,SAASjB,MAAMkB,OAC3CC,UAAWJ,OAAOJ,EAAEK,OAAOC,SAASG,KAAKF,OACzCG,YAAaN,OAAOJ,EAAEK,OAAOC,SAASK,OAAOJ,QAGtCK,EAAI,EAAGA,GAAKV,EAAUQ,YAAaE,GAAK,EAAG,CAGlDzB,EAAcyB,EAFKV,EAAUC,YAAcS,EAAI,GAAKV,EAAUM,WAG3DK,MAAK,SAAAC,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MACjBJ,EAAA8B,OAAOC,QAAQ,uBAAwCC,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,MAAK,G,IAEnE6B,OAAM,SAAAJ,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MAClBJ,EAAA8B,OAAOI,QAAQ,sBAAqCF,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,MAAK,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\n\nformRef.addEventListener('submit', onCreatePromisesBtnClick);\n\nfunction onCreatePromisesBtnClick(e) {\n  e.preventDefault();\n\n  const refsInput = {\n    delayValue: Number(e.target.elements.delay.value),\n    stepValue: Number(e.target.elements.step.value),\n    amountValue: Number(e.target.elements.amount.value),\n  };\n\n  for (let i = 1; i <= refsInput.amountValue; i += 1) {\n    let currentDelay = refsInput.delayValue + (i - 1) * refsInput.stepValue;\n\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {});\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {});\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","e","preventDefault","refsInput","delayValue","Number","target","elements","value","stepValue","step","amountValue","amount","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.c5aef867.js.map"}